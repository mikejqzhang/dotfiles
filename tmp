(setq org-special-ctrl-a/e t)

;; allows for newline under headings
;; (setq org-blank-before-new-entry (quote ((heading) (plain-list-item))))
(setq org-cycle-separator-lines 1)

(setq org-todo-keywords
      '((sequence "TODO" "IN-PROGRESS" "WAITING"
                  "|" "DONE" "CANCELED")))

(setq org-enforce-todo-dependencies t)

(setq org-log-done 'time)

(setq org-hierarchical-todo-statistics nil)
(setq org-src-preserve-indentation nil 
      org-edit-src-content-indentation 0)


(defun clever-insert-item ()
  "Clever insertion of org item."
  (if (not (org-in-item-p))
      (insert "\n")
    (org-insert-item))
  )

(defun evil-org-eol-call (fun)
  "Go to end of line and call provided function.
FUN function callback"
  (end-of-line)
  (funcall fun)
  (evil-append nil)
  )


(general-nmap
  :keymaps 'org-mode-map
  "t" 'org-todo
  "s-t" '(lambda () (interactive) (evil-org-eol-call (lambda() (org-insert-todo-heading nil))))
  "-" 'org-cycle-list-bullet
  "0" 'org-beginning-of-line
  "$" 'org-end-of-line
  "o" '(lambda () (interactive) (evil-org-eol-call 'clever-insert-item))
  "s-o" '(lambda () (interactive) (evil-org-eol-call 'org-insert-heading))
  "H" '(lambda () (interactive) (evil-org-eol-call 'org-insert-heading-respect-content))
  "T" '(lambda () (interactive) (evil-org-eol-call 'org-insert-todo-heading-respect-content))
  ">>" 'org-do-demote
  "<<" 'org-do-promote
  "s-." 'org-demote-subtree
  "s-," 'org-promote-subtree
  "<tab>" 'org-cycle
  "s-h" 'org-table-move-column-left
  "s-j" 'org-drag-element-forward
  "s-k" 'org-drag-element-backward
  "s-l" 'org-table-move-column-right
  )

;; Make evil-mode up/down operate in screen lines instead of logical lines
(define-key evil-motion-state-map "j" 'evil-next-visual-line)
(define-key evil-motion-state-map "k" 'evil-previous-visual-line)
;; Also in visual mode
(define-key evil-visual-state-map "j" 'evil-next-visual-line)
(define-key evil-visual-state-map "k" 'evil-previous-visual-line)

(general-nmap
  :keymaps 'calendar-mode-map
  "C-h" 'calendar-backward-day
  "C-j" 'calendar-forward-week
  "C-k" 'calendar-backward-week
  "C-l" 'calendar-forward-day
  )

(evil-leader-def
  :keymaps 'org-mode-map
  "t" 'org-show-todo-tree
  "s" 'org-schedule
  "d" 'org-deadline
  "r" 'org-mode-restart
  )
